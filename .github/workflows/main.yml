name: Test and Build

on:
  push:
    branches:
    - main
    paths:
    - '**/*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    #Setting up environment
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Docker Setup
      uses: docker/setup-buildx-action@v2

    - name: Docker Credentials
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Docker tag
      id: version
      run: |
        VERSION=v$(date +"%Y%m%d%H%M%S")
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    # Run tfsec on Terraform code
    - name: Install tfsec
      run: |
        curl -s https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash

    - name: Run tfsec scan
      run: |
        tfsec ./terraform || echo "tfsec scan completed with issues."

    # Build the Docker Image
    - name: Build Docker Image
      run: |
        docker build -t purushottammalbishoye/devsecops-cicd:${{ env.VERSION }} .

    # Run Trivy scan on the image
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'purushottammalbishoye/devsecops-cicd:${{ env.VERSION }}'
        format: 'json'  
        exit-code: '0'   # to not fail the pipeline
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH,MEDIUM'
      continue-on-error: true

    - name: Save Trivy report
      run: |
        mkdir -p trivy-results
        trivy image --format json -o trivy-results/report.json purushottammalbishoye/devsecops-cicd:${{ env.VERSION }}

    - name: Upload Trivy Report
      uses: actions/upload-artifact@v4
      with:
        name: trivy-report
        path: trivy-results/report.json

    # Push the Docker Image
    - name: Push Docker Image
      run: |
        docker push purushottammalbishoye/devsecops-cicd:${{ env.VERSION }}

    # UPdate the K8s Manifest Files
    - name: Update K8s Manifests
      run: |
        cat Deploy/deployment.yaml
        sed -i "s|image: purushottammalbishoye/devsecops-cicd:.*|image: purushottammalbishoye/devsecops-cicd:${{ env.VERSION }}|g" Deploy/deployment.yaml
        cat Deploy/deployment.yaml

    # Update Github
    - name: Commit the changes
      run: |
        git config --global user.email "<>"
        git config --global user.name "GitHub Actions Bot"
        git checkout main
        git add Deploy/deployment.yaml
        git commit -m "Update deploy.yaml with new image version - ${{ env.VERSION }}"
        git push origin main